{
  "openapi": "3.0.1",
  "info": {
    "title": "Monitoring Service",
    "description": "",
    "version": "v1"
  },
  "paths": {
    "/Monitor/{monitorId}/measurement": {
      "post": {
        "tags": [
          "Monitor"
        ],
        "summary": "Registers a measurement from a monitor.",
        "parameters": [
          {
            "name": "monitorId",
            "in": "path",
            "description": "The identifier of the monitor reporting the measurement.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The DTO containing information of the measurement.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MeasurementDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MeasurementDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MeasurementDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Indicates that the measurement was reported successfully."
          },
          "400": {
            "description": "Indicates that there was an error with the request.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/Property/{propertyName}": {
      "get": {
        "tags": [
          "Property"
        ],
        "summary": "Looks for the Knowledge property with the given name.",
        "parameters": [
          {
            "name": "propertyName",
            "in": "path",
            "description": "The name of the property to look for.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The property was found. Returns the property's value.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PropertyDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PropertyDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PropertyDTO"
                }
              }
            }
          },
          "404": {
            "description": "No property with that name was found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/Service/{serviceName}/configuration/{configurationName}": {
      "get": {
        "tags": [
          "Service"
        ],
        "summary": "Gets a configuration property given its name.",
        "parameters": [
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the service whose configuration we are looking for.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "configurationName",
            "in": "path",
            "description": "The name of the configuration property to find.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The configuration property was found. Returns the value of the property.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationDTO"
                }
              }
            }
          },
          "400": {
            "description": "There was an error with the provided arguments.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "The configuration property was not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Service"
        ],
        "summary": "Sets value of a given configuration property. If the property does not exist, it will be created.",
        "parameters": [
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the service.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "configurationName",
            "in": "path",
            "description": "The name of the property to set.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The DTO containing the value to set.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetPropertyDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetPropertyDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetPropertyDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The property was updated or created successfully."
          },
          "400": {
            "description": "There was an error with the provided arguments.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ConfigurationDTO": {
        "type": "object",
        "properties": {
          "serviceName": {
            "type": "string",
            "description": "Gets or Sets ServiceName",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets Name",
            "nullable": true
          },
          "value": {
            "type": "string",
            "description": "Gets or Sets Value",
            "nullable": true
          },
          "lastModification": {
            "type": "string",
            "description": "Gets or Sets LastModification",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "ConfigurationDTO"
      },
      "MeasurementDTO": {
        "type": "object",
        "properties": {
          "probeId": {
            "type": "string",
            "format": "uuid"
          },
          "property": {
            "$ref": "#/components/schemas/Property"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "Property": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PropertyDTO": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Gets or Sets Value",
            "nullable": true
          },
          "lastModification": {
            "type": "string",
            "description": "Gets or Sets LastModification",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "PropertyDTO"
      },
      "SetPropertyDTO": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Gets or Sets Value",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "SetPropertyDTO"
      }
    }
  }
}